ts_start <- 1905
ts_end   <- 2018
nloops   <- ts_end - ts_start + 1
df       <- NULL
for (replicate in 1:500){
for (nyears in 1:nloops) {
ranked <- rank_random_levels(csls_levels, nyears, ts_start, ts_end, lake_names)
for (prob in probs){
df <- rbind(df, find_level(ranked, nyears, "random", replicate, prob))
}
}
}
mean_levels <- df %>%
group_by(lake = .data$lake,
prob = .data$prob,
year = .data$year) %>%
summarise(std = sd(level, na.rm = TRUE),
mean = mean(level, na.rm = TRUE),
) %>%
select(lake, prob, year, mean, std)
ggplot() +
geom_line(data = df,
aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = level, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
library(CSLSlevels)
library(devtools)
library(ggplot2)  # for plotting
library(extrafont)  # for fonts
library(dplyr)  # for %>% pipes
library(reshape2) # for dcast
library(cowplot) # for plotgrid
library(magick) #for drawing images
library(knitr)
library(kableExtra)
csls_levels <- CSLSlevels::csls_levels
lake_names  <- c("Pleasant Lake", "Long Lake", "Plainfield Lake")
probs       <- c(10, 50, 90)
text_size   <- 12
year_prob_level1 <- find_multiple_levels(csls_levels,
years = c(1905:2018),
probs = probs,
types = "forward")
plot_analysis_window(year_prob_level1, 1954, text_size = text_size)
year_prob_level2 <- find_multiple_levels(csls_levels,
years = c(1905:2018),
probs = probs,
types = "backward")
plot_analysis_window(year_prob_level2, 1969, text_size = text_size)
year_prob_level3 <- find_multiple_levels(csls_levels,
years = c(1905:2018),
probs = probs,
types = "forward",
windows = 50)
plot_analysis_window(year_prob_level3, 1969, text_size = text_size)
ts_start <- 1905
ts_end   <- 2018
nloops   <- ts_end - ts_start + 1
df       <- NULL
for (replicate in 1:500){
for (nyears in 1:nloops) {
ranked <- rank_random_levels(csls_levels, nyears, ts_start, ts_end, lake_names)
for (prob in probs){
df <- rbind(df, find_level(ranked, nyears, "random", replicate, prob))
}
}
}
mean_levels <- df %>%
group_by(lake = .data$lake,
prob = .data$prob,
year = .data$year) %>%
summarise(std = sd(level, na.rm = TRUE),
mean = mean(level, na.rm = TRUE)) %>%
select(lake, prob, year, mean, std)
ggplot() +
geom_line(data = df,
aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = level, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = df,
aes(x = .data$year, y = .data$level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = level, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
# geom_line(data = df,
#           aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = level, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = df,
aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = level, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(levels = probs,
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = df,
aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = level, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(level = probs,
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = df,
aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = level, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(level = as.factor(probs),
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
?color_scale_manual
?scale_color_manual
ggplot() +
geom_line(data = df,
aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = level, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(breaks = as.factor(probs),
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = df,
aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = level, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
# scale_color_manual(breaks = as.factor(probs),
#                    values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = df,
aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = mean, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(breaks = as.factor(probs),
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = mean_levels,
aes(x = year, y = std, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = mean_levels,
aes(x = year, y = std, color = prob)) +
geom_vline(xintercept = 37, linetype = "dashed") +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_smooth(data = df,
aes(x = year, y = level), color = "grey70") +
# geom_line(data = mean_levels,
#           aes(x = year, y = mean, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(breaks = as.factor(probs),
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_smooth(data = df,
formula = year ~ level) +
# geom_line(data = mean_levels,
#           aes(x = year, y = mean, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(breaks = as.factor(probs),
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_smooth(data = df,
aes(x = year, y = level)) +
# geom_line(data = mean_levels,
#           aes(x = year, y = mean, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(breaks = as.factor(probs),
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_smooth(data = df,
aes(x = year, y = level, group = prob)) +
# geom_line(data = mean_levels,
#           aes(x = year, y = mean, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(breaks = as.factor(probs),
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = df,
aes(x = year, y = level), color = "grey70") +
geom_line(data = mean_levels,
aes(x = year, y = mean, color = prob)) +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(breaks = as.factor(probs),
values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = mean_levels,
aes(x = year, y = std, color = prob)) +
geom_vline(xintercept = 37, linetype = "dashed") +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(values = c("#4575B4", "#FDAE61", "#D73027")) +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot() +
geom_line(data = mean_levels,
aes(x = year, y = std, color = prob)) +
geom_vline(xintercept = 37, linetype = "dashed") +
facet_wrap(~lake, scales = "free_y") +
scale_color_manual(values = c("#4575B4", "#FDAE61", "#D73027")) +
labs(x = "Number of Years in Window",
y = "Standard Deviation of Lake Level",
color = "Exceedance Probability (%)") +
theme_bw() +
theme(text = element_text(family = "Segoe UI Semilight",
size = text_size),
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "top")
2018-30+1
year_prob_level1 <- find_multiple_levels(csls_levels,
years = c(1905:2018),
probs = probs,
types = "forward")
plot_analysis_window(year_prob_level1, 1934, text_size = text_size)
plot_analysis_window(year_prob_level1, 1934, text_size = text_size)
year_prob_level2 <- find_multiple_levels(csls_levels,
years = c(1905:2018),
probs = probs,
types = "backward")
plot_analysis_window(year_prob_level2, 1989, text_size = text_size)
plot_analysis_window(year_prob_level2, 1989, text_size = text_size)
year_prob_level3 <- find_multiple_levels(csls_levels,
years = c(1905:2018),
probs = probs,
types = "forward",
windows = 38)
plot_analysis_window(year_prob_level3, 1981, text_size = text_size)
plot_analysis_window(year_prob_level3, 1981, text_size = text_size)
ggplot(csls_levels) +
geom_line(aes(x = obs_mo, y = lake_lev_pred)) +
facet_wrap(~lake_name, scales = "free_y") +
theme_bw()
ggplot(csls_levels) +
geom_line(aes(x = as.Date(as.character(obs_mo)), y = lake_lev_pred)) +
facet_wrap(~lake_name, scales = "free_y") +
theme_bw()
ggplot(csls_levels) +
geom_line(aes(x = as.Date(as.character(obs_mo)), y = lake_lev_pred)) +
facet_wrap(~lake_name, scales = "free_y") +
scale_x_continuous(limits = c(2010, 2018)) +
theme_bw()
ggplot(csls_levels) +
geom_line(aes(x = as.Date(as.character(obs_mo)), y = lake_lev_pred)) +
facet_wrap(~lake_name, scales = "free_y") +
scale_x_continuous(limits = c("2010-01-01", "2018-12-31")) +
theme_bw()
ggplot(csls_levels) +
geom_line(aes(x = as.Date(as.character(obs_mo)), y = lake_lev_pred)) +
facet_wrap(~lake_name, scales = "free_y") +
scale_x_continuous(limits = as.Date(c("2010-01-01", "2018-12-31"))) +
theme_bw()
library(lubridate)
ggplot(csls_levels) +
geom_line(aes(x = as_datetime(as.character(obs_mo)), y = lake_lev_pred)) +
facet_wrap(~lake_name, scales = "free_y") +
scale_x_continuous(limits = as_datetime(c("2010-01-01", "2018-12-31"))) +
theme_bw()
as_datetime(c("2010-01-01", "2018-12-31"))
ggplot(csls_levels) +
geom_line(aes(x = as_datetime(as.character(obs_mo)), y = lake_lev_pred)) +
facet_wrap(~lake_name, scales = "free_y") +
# scale_x_continuous(limits = as_datetime(c("2010-01-01", "2018-12-31"))) +
theme_bw()
ggplot(csls_levels) +
geom_line(aes(x = as_datetime(as.character(obs_mo)), y = lake_lev_pred)) +
facet_wrap(~lake_name, scales = "free_y") +
scale_x_datetime(limits = as_datetime(c("2010-01-01", "2018-12-31"))) +
theme_bw()
monte_carlo_2018 <- monte_carlo_exceedances(levels, ts_start = 1905,
ts_end = 2018, nreplicates = 10)
load_all()
monte_carlo_2018 <- monte_carlo_exceedances(levels, ts_start = 1905,
ts_end = 2018, nreplicates = 10)
monte_carlo_2018 <- monte_carlo_exceedances(csls_levels, ts_start = 1905,
ts_end = 2018, nreplicates = 10)
save(monte_carlo_2018, file = "data/monte_carlo_2018.Rda")
getwd()
library(devtools)
use_data(monte_carlo_2018)
monte_carlo_2018 <- monte_carlo_exceedances(csls_levels, ts_start = 1905,
ts_end = 2018, nreplicates = 10)
monte_carlo_2018 <- monte_carlo_exceedances(csls_levels, ts_start = 1905,
ts_end = 2018, nreplicates = 10)
use_data(monte_carlo_2018, overwrite = TRUE, compress = "xz")
monte_carlo_2015 <- monte_carlo_exceedances(csls_levels, ts_start = 1905,
ts_end = 2015, nreplicates = 10)
use_data(monte_carlo_2015, overwrite = TRUE, compress = "xz")
summary_2018 <- monte_carlo_2018 %>%
group_by(lake = .data$lake,
prob = .data$prob,
year = .data$year) %>%
summarise(std = sd(level, na.rm = TRUE),
mean = mean(level, na.rm = TRUE)) %>%
select(lake, prob, year, mean, std)
summary_2015 <- monte_carlo_2015 %>%
group_by(lake = .data$lake,
prob = .data$prob,
year = .data$year) %>%
summarise(std = sd(level, na.rm = TRUE),
mean = mean(level, na.rm = TRUE)) %>%
select(lake, prob, year, mean, std)
?sd
?mean
check()
?runif
check()
install()
library(akima, lib.loc = "C:/Users/votercb/Documents/R/win-library/3.5")
detach("package:akima", unload = TRUE)
library(broom, lib.loc = "C:/Users/votercb/Documents/R/win-library/3.5")
detach("package:broom", unload = TRUE)
install.packages(c("BH", "broom", "callr", "cli", "curl", "data.table", "DBI", "devtools", "ggpubr", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "knitr", "later", "mime", "pillar", "pkgbuild", "plotly", "plyr", "promises", "R6", "Rcpp", "rgdal", "rmarkdown", "roxygen2", "rvest", "selectr", "shiny", "sp", "stringdist", "testthat", "tidyverse", "tinytex", "vctrs", "xfun"))
install.packages(c("BH", "broom", "callr", "cli", "curl", "data.table", "DBI", "devtools", "ggpubr", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "knitr", "later", "mime", "pillar", "pkgbuild", "plotly", "plyr", "promises", "R6", "Rcpp", "rgdal", "rmarkdown", "roxygen2", "rvest", "selectr", "shiny", "sp", "stringdist", "testthat", "tidyverse", "tinytex", "vctrs", "xfun"))
install()
library(devtools)
install()
source('Z:/WQWT_PROJECTS/WY_MS_Monitoring/2018 Summer Field Crew/Central Sands Lake Study/Analysis_2019/CSLSlevels/data-raw/run_monte_carlo_exceedances.R')
source('//central/water/WQWT_PROJECTS/WY_MS_Monitoring/2018 Summer Field Crew/Central Sands Lake Study/Analysis_2019/CSLSlevels/data-raw/run_monte_carlo_exceedances.R')
# Save Data
use_data(monte_carlo_2018, monte_carlo_2015, overwrite = TRUE, compress = 'xz')
load_all()
install()
library(CSLSlevels)
library(devtools)
library(ggplot2)  # for plotting
library(extrafont)  # for fonts
library(dplyr)  # for %>% pipes
library(reshape2) # for dcast
library(cowplot) # for plotgrid
library(magick) #for drawing images
library(knitr)
library(kableExtra)
csls_levels <- CSLSlevels::csls_levels
lake_names  <- c("Pleasant Lake", "Long Lake", "Plainfield Lake")
probs       <- c(10, 50, 90)
text_size   <- 12
year_prob_level1 <- find_multiple_levels(csls_levels,
years = c(1905:2018),
probs = probs,
types = "forward")
plot_analysis_window(year_prob_level1, 1934, text_size = text_size)
year_prob_level2 <- find_multiple_levels(csls_levels,
years = c(1905:2018),
probs = probs,
types = "backward")
plot_analysis_window(year_prob_level2, 1989, text_size = text_size)
year_prob_level3 <- find_multiple_levels(csls_levels,
years = c(1905:2018),
probs = probs,
types = "forward",
windows = 38)
plot_analysis_window(year_prob_level3, 1981, text_size = text_size)
monte_carlo_2018 <- CSLSlevels::monte_carlo_2018
document()
monte_carlo_2018 <- load("data/monte_carlo_2018.Rda")
load("//central/water/WQWT_PROJECTS/WY_MS_Monitoring/2018 Summer Field Crew/Central Sands Lake Study/Analysis_2019/CSLSlevels/data/monte_carlo_2018.rda")
document()
check()
monte_carlo_2018 <- load("data/monte_carlo_2018.rda")
check()
install()
monte_carlo_2018 <- CSLSlevels::monte_carlo_2018
?use_data
source('//central/water/WQWT_PROJECTS/WY_MS_Monitoring/2018 Summer Field Crew/Central Sands Lake Study/Analysis_2019/CSLSlevels/data-raw/run_monte_carlo_exceedances.R')
document()
check()
install()
library(devtools)
build_vignettes()
library(devtools)
check()
install()
build_vignettes()
build_vignettes()
